server:
  port: 8003

mybatis:
  config-location: classpath:mybatis/mybatis.cfg.xml        # mybatis配置文件所在路径
  type-aliases-package: com.lxh.entity                      # 所有Entity别名类所在包
  mapper-locations: classpath:mybatis/mapper/**/*.xml       # mapper映射文件

spring:
  profiles:dev
  application:
    name: microservice-product #这个很重要，这在以后的服务与服务之间相互调用一般都是根据这个name
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: com.mysql.cj.jdbc.Driver             # mysql驱动包

    url: jdbc:mysql://39.106.52.87:3306/lixuhui8002?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true  # 数据库名称
    username: root
    password: root
    dbcp2:
      min-idle: 5                                # 数据库连接池的最小维持连接数
      initial-size: 5                            # 初始化连接数
      max-total: 5                               # 最大连接数
      max-wait-millis: 150                       # 等待连接获取的最大超时时间

eureka:
  instance:
#    hostname: localhost # eureka服务端的实例名称
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true
  client:
    registerWithEureka: true # 服务注册，false表示不将自已注册到Eureka服务中
    fetchRegistry: true # 服务发现，false表示自己不从Eureka服务中获取注册信息
    serviceUrl:    # Eureka客户端与Eureka服务端的交互地址，集群版配置对方的地址，单机版配置自己（如果不配置则默认本机8761端口）
      #defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      #集群版
#      defaultZone: http://localhost:6001/eureka/
      defaultZone: http://eureka6001.com:6001/eureka/,http://eureka6002.com:6002/eureka/,http://eureka6001.com:6003/eureka/

# 在被监控服务上添加暴露端点
management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream
        #http://localhost:8003/actuator/hystrix.stream查看监控的数据